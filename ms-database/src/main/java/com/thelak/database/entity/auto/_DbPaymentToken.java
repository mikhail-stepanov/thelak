package com.thelak.database.entity.auto;

import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.thelak.database.entity.DbPaymentsReccurrent;

/**
 * Class _DbPaymentToken was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _DbPaymentToken extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "id";

    public static final Property<LocalDateTime> CREATED_DATE = Property.create("createdDate", LocalDateTime.class);
    public static final Property<LocalDateTime> DELETED_DATE = Property.create("deletedDate", LocalDateTime.class);
    public static final Property<Long> ID_USER = Property.create("idUser", Long.class);
    public static final Property<LocalDateTime> MODIFIED_DATE = Property.create("modifiedDate", LocalDateTime.class);
    public static final Property<String> TOKEN = Property.create("token", String.class);
    public static final Property<List<DbPaymentsReccurrent>> CARD_TO_PAYMENT = Property.create("cardToPayment", List.class);

    public void setCreatedDate(LocalDateTime createdDate) {
        writeProperty("createdDate", createdDate);
    }
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime)readProperty("createdDate");
    }

    public void setDeletedDate(LocalDateTime deletedDate) {
        writeProperty("deletedDate", deletedDate);
    }
    public LocalDateTime getDeletedDate() {
        return (LocalDateTime)readProperty("deletedDate");
    }

    public void setIdUser(long idUser) {
        writeProperty("idUser", idUser);
    }
    public long getIdUser() {
        Object value = readProperty("idUser");
        return (value != null) ? (Long) value : 0;
    }

    public void setModifiedDate(LocalDateTime modifiedDate) {
        writeProperty("modifiedDate", modifiedDate);
    }
    public LocalDateTime getModifiedDate() {
        return (LocalDateTime)readProperty("modifiedDate");
    }

    public void setToken(String token) {
        writeProperty("token", token);
    }
    public String getToken() {
        return (String)readProperty("token");
    }

    public void addToCardToPayment(DbPaymentsReccurrent obj) {
        addToManyTarget("cardToPayment", obj, true);
    }
    public void removeFromCardToPayment(DbPaymentsReccurrent obj) {
        removeToManyTarget("cardToPayment", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbPaymentsReccurrent> getCardToPayment() {
        return (List<DbPaymentsReccurrent>)readProperty("cardToPayment");
    }


}
